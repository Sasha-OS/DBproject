[{"/Users/oleksandrgribinuk/Desktop/client/server/client/src/index.js":"1","/Users/oleksandrgribinuk/Desktop/client/server/client/src/App.js":"2","/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/InputCustomer.js":"3","/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/ListCustomer.js":"4","/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/EditCustomer.js":"5","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/index.js":"6","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/App.js":"7","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListCustomer.js":"8","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputCustomer.js":"9","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditCustomer.js":"10","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputAuthor.js":"11","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListAuthor.js":"12","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditAuthor.js":"13","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputSupplier.js":"14","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListSupplier.js":"15","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditSupplier.js":"16","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputOrder.js":"17","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListOrder.js":"18","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditOrder.js":"19","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputBook.js":"20","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListBook.js":"21","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditBook.js":"22","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListOrderitem.js":"23","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputOrderitem.js":"24","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditOrderitem.js":"25"},{"size":220,"mtime":1607436486875,"results":"26","hashOfConfig":"27"},{"size":403,"mtime":1607440877409,"results":"28","hashOfConfig":"27"},{"size":1643,"mtime":1607440716949,"results":"29","hashOfConfig":"27"},{"size":1954,"mtime":1607446395298,"results":"30","hashOfConfig":"27"},{"size":2943,"mtime":1607448689708,"results":"31","hashOfConfig":"27"},{"size":1783,"mtime":1607529952681,"results":"32","hashOfConfig":"33"},{"size":1988,"mtime":1607531022798,"results":"34","hashOfConfig":"33"},{"size":2030,"mtime":1607507537108,"results":"35","hashOfConfig":"33"},{"size":2424,"mtime":1607531070321,"results":"36","hashOfConfig":"33"},{"size":2972,"mtime":1607472625097,"results":"37","hashOfConfig":"33"},{"size":2368,"mtime":1607531060608,"results":"38","hashOfConfig":"33"},{"size":1953,"mtime":1607507488543,"results":"39","hashOfConfig":"33"},{"size":2853,"mtime":1607476885627,"results":"40","hashOfConfig":"33"},{"size":2167,"mtime":1607531080786,"results":"41","hashOfConfig":"33"},{"size":1943,"mtime":1607507421753,"results":"42","hashOfConfig":"33"},{"size":2595,"mtime":1607505228092,"results":"43","hashOfConfig":"33"},{"size":2142,"mtime":1607531074816,"results":"44","hashOfConfig":"33"},{"size":1834,"mtime":1607508528097,"results":"45","hashOfConfig":"33"},{"size":2520,"mtime":1607508866161,"results":"46","hashOfConfig":"33"},{"size":2709,"mtime":1607531064392,"results":"47","hashOfConfig":"33"},{"size":2010,"mtime":1607527269673,"results":"48","hashOfConfig":"33"},{"size":3287,"mtime":1607527384508,"results":"49","hashOfConfig":"33"},{"size":2037,"mtime":1607530596005,"results":"50","hashOfConfig":"33"},{"size":2306,"mtime":1607530914327,"results":"51","hashOfConfig":"33"},{"size":2795,"mtime":1607530368831,"results":"52","hashOfConfig":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xv6rw8",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},"wbf9cm",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"66"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"66"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},"/Users/oleksandrgribinuk/Desktop/client/server/client/src/index.js",[],"/Users/oleksandrgribinuk/Desktop/client/server/client/src/App.js",[],"/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/InputCustomer.js",["123"],"/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/ListCustomer.js",["124"],"/Users/oleksandrgribinuk/Desktop/client/server/client/src/Components/EditCustomer.js",["125"],"/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/index.js",["126","127","128","129","130","131"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport {Author} from './App';\nimport {Supplier} from './App';\nimport {Order} from './App';\nimport {Book} from './App';\nimport {OrderItem} from './App';\n\n\n\nif (window.location == \"http://localhost:3000/customer\") {\n  document.getElementById('root').innerHTML = '';\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n  \n} else if (window.location == \"http://localhost:3000/author\")\n  {\n    document.getElementById('root').innerHTML = '';\n    ReactDOM.render(\n      <React.StrictMode>\n        <Author />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  }else if (window.location == \"http://localhost:3000/supplier\") {\n    document.getElementById('root').innerHTML = '';\n    ReactDOM.render(\n      <React.StrictMode>\n        <Supplier />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  } else if (window.location == \"http://localhost:3000/order\") {\n    document.getElementById('root').innerHTML = '';\n    ReactDOM.render(\n      <React.StrictMode>\n        <Order />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  } else if (window.location == \"http://localhost:3000/books\") {\n    document.getElementById('root').innerHTML = '';\n    ReactDOM.render(\n      <React.StrictMode>\n        <Book />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  } else if (window.location == \"http://localhost:3000/orderitem\") {\n    document.getElementById('root').innerHTML = '';\n    ReactDOM.render(\n      <React.StrictMode>\n        <OrderItem />\n      </React.StrictMode>,\n      document.getElementById('root')\n    );\n  }\n\n",["132","133"],"/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/App.js",[],"/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListCustomer.js",["134"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditCustomer from './EditCustomer';\nconst ListCustomers = () => {\n    const [customers, setCustomers] = useState([]);\n    //detele customer function\n\n    const deleteCustomer = async id => {\n        try {\n          const deleteCustomer = await fetch(`http://localhost:5000/Customers/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setCustomers(customers.filter(customer => customer.customerid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getCustomers = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Customers\");\n          const jsonData = await response.json();\n    \n          setCustomers(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getCustomers();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>Customertid</th>\n        <th>CustomerName</th>\n        <th>CustomerSurname</th>\n        <th>Phone</th>\n        <th>Address</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {customers.map(customer => (\n          <tr key={customer.customerid}>\n              <td>{customer.customerid}</td>\n              <td>{customer.customername}</td>\n              <td>{customer.customersurname}</td>\n              <td>{customer.customerphone}</td>\n              <td>{customer.customeraddress}</td>\n              <td>\n                  <EditCustomer customer = {customer}></EditCustomer>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteCustomer(customer.customerid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListCustomers;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputCustomer.js",["135"],"import React, {Fragment, useState} from \"react\";\n\nconst InputCustomer = () => {\n    const [customername, setCustomername] = useState(\"\");\n    const [customersurname, setCustomersurname] = useState(\"\");\n    const [ customerphone, setCustomerphone] = useState(\"\");\n    const [customeraddress, setCustomeraddress] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { customername, customersurname, customerphone, customeraddress };\n          const response = await fetch(\"http://localhost:5000/Customers\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/customer\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n       <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">Customer</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={customername} onChange={e => setCustomername(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={customersurname} onChange={e => setCustomersurname(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={customerphone} onChange={e => setCustomerphone(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={customeraddress} onChange={e => setCustomeraddress(e.target.value)}></input>\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputCustomer;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditCustomer.js",["136"],"import React, {Fragment, useState} from \"react\";\n\nconst EditCustomer = ({customer}) => {\n    const [customername, setCustomername] = useState(customer.customername);\n    const [customersurname, setCustomersurname] = useState(customer.customersurname);\n    const [customerphone, setCustomerphone] = useState(customer.customerphone);\n    const [customeraddress, setCustomeraddress] = useState(customer.customeraddress);\n    //create edit function to edit data in modal\n\n    const updateCustomer = async e => {\n        e.preventDefault();\n        try {\n          const body = { customername, customersurname, customerphone, customeraddress  };\n          const response = await fetch(\n            `http://localhost:5000/Customers/${customer.customerid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/customer\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${customer.customerid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${customer.customerid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit Customer</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setCustomername(customer.customername);\n                    setCustomersurname(customer.customersurname);\n                    setCustomerphone(customer.customerphone);\n                    setCustomeraddress(customer.customeraddress);\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={customername} onChange={e => setCustomername(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={customersurname} onChange={e => setCustomersurname(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={customerphone} onChange={e => setCustomerphone(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={customeraddress} onChange={e => setCustomeraddress(e.target.value)}></input>\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateCustomer(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditCustomer;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputAuthor.js",["137"],"import React, {Fragment, useState} from \"react\";\n\nconst InputAuthor = () => {\n    const [authorname, setAuthorname] = useState(\"\");\n    const [authorsurname, setAuthorsurname] = useState(\"\");\n    const [placeofbirth, setPlaceofbirth] = useState(\"\");\n    const [dateofbirth, setDateofbirth] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { authorname, authorsurname, placeofbirth, dateofbirth };\n          const response = await fetch(\"http://localhost:5000/Authors\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/author\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n       <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">Author</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={authorname} onChange={e => setAuthorname(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={authorsurname} onChange={e => setAuthorsurname(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={placeofbirth} onChange={e => setPlaceofbirth(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={dateofbirth} onChange={e => setDateofbirth(e.target.value)}></input>\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputAuthor;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListAuthor.js",["138"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditAuthor from './EditAuthor';\nconst ListAuthors = () => {\n    const [authors, setAuthors] = useState([]);\n    //detele author function\n\n    const deleteAuthor = async id => {\n        try {\n          const deleteAuthor = await fetch(`http://localhost:5000/Authors/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setAuthors(authors.filter(author => author.authorid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getAuthors = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Authors\");\n          const jsonData = await response.json();\n    \n          setAuthors(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getAuthors();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>AuthorId</th>\n        <th>AuthorName</th>\n        <th>AuthorSurname</th>\n        <th>PlaceOfBirth</th>\n        <th>DateOfBirth</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {authors.map(author => (\n          <tr key={author.authorid}>\n              <td>{author.authorid}</td>\n              <td>{author.authorname}</td>\n              <td>{author.authorsurname}</td>\n              <td>{author.placeofbirth}</td>\n              <td>{author.dateofbirth}</td>\n              <td>\n                  <EditAuthor author = {author}></EditAuthor>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteAuthor(author.authorid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListAuthors;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditAuthor.js",["139"],"import React, {Fragment, useState} from \"react\";\n\nconst EditAuthor = ({author}) => {\n    const [authorname, setAuthorname] = useState(author.authorname);\n    const [authorsurname, setAuthorsurname] = useState(author.authorsurname);\n    const [placeofbirth, setPlaceofbirth] = useState(author.placeofbirth);\n    const [dateofbirth, setDateofbirt] = useState(author.dateofbirth);\n    //create edit function to edit data in modal\n\n    const updateAuthor = async e => {\n        e.preventDefault();\n        try {\n          const body = { authorname, authorsurname, placeofbirth, dateofbirth  };\n          const response = await fetch(\n            `http://localhost:5000/Authors/${author.authorid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/author\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${author.authorid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${author.authorid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit Author</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setAuthorname(author.authorname);\n                    setAuthorsurname(author.authorsurname);\n                    setPlaceofbirth(author.placeofbirth);\n                    setDateofbirt(author.dateofbirth);\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={authorname} onChange={e => setAuthorname(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={authorsurname} onChange={e => setAuthorsurname(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={placeofbirth} onChange={e => setPlaceofbirth(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={dateofbirth} onChange={e => setDateofbirt(e.target.value)}></input>\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateAuthor(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditAuthor;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputSupplier.js",["140"],"import React, {Fragment, useState} from \"react\";\n\nconst InputSupplier = () => {\n    const [phone, setPhone] = useState(\"\");\n    const [taxnumber, setTaxnumber] = useState(\"\");\n    const [primarybankaccount, setPrimarybankaccount] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { phone, taxnumber, primarybankaccount };\n          const response = await fetch(\"http://localhost:5000/Suppliers\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/supplier\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n       <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">Supplier</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={phone} onChange={e => setPhone(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={taxnumber} onChange={e => setTaxnumber(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={primarybankaccount} onChange={e => setPrimarybankaccount(e.target.value)}></input>\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputSupplier;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListSupplier.js",["141"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditSupplier from './EditSupplier';\nconst ListSuppliers = () => {\n    const [suppliers, setSuppliers] = useState([]);\n    //detele author function\n\n    const deleteSupplier = async id => {\n        try {\n          const deleteSupplier = await fetch(`http://localhost:5000/Suppliers/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setSuppliers(suppliers.filter(supplier => supplier.supplierid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getSupplier = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Suppliers\");\n          const jsonData = await response.json();\n    \n          setSuppliers(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getSupplier();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>SupplierId</th>\n        <th>Phone</th>\n        <th>TaxNumber</th>\n        <th>PrimaryBankAccount</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {suppliers.map(supplier => (\n          <tr key={supplier.supplierid}>\n              <td>{supplier.supplierid}</td>\n              <td>{supplier.phone}</td>\n              <td>{supplier.taxnumber}</td>\n              <td>{supplier.primarybankaccount}</td>\n\n              <td>\n                  <EditSupplier supplier = {supplier}></EditSupplier>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteSupplier(supplier.supplierid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListSuppliers;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditSupplier.js",["142"],"import React, {Fragment, useState} from \"react\";\n\nconst EditSupplier = ({supplier}) => {\n    const [phone, setPhone] = useState(supplier.phone);\n    const [taxnumber, setTaxnumber] = useState(supplier.taxnumber);\n    const [primarybankaccount, setPrimarybankaccount] = useState(supplier.primarybankaccount);\n    //create edit function to edit data in modal\n\n    const updateSupplier = async e => {\n        e.preventDefault();\n        try {\n          const body = { phone, taxnumber, primarybankaccount };\n          const response = await fetch(\n            `http://localhost:5000/Suppliers/${supplier.supplierid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/supplier\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${supplier.supplierid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${supplier.supplierid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit Supplier</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setPhone(supplier.phone);\n                    setTaxnumber(supplier.taxnumber);\n                    setPrimarybankaccount(supplier.primarybankaccount);\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={phone} onChange={e => setPhone(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={taxnumber} onChange={e => setTaxnumber(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={primarybankaccount} onChange={e => setPrimarybankaccount(e.target.value)}></input>\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateSupplier(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditSupplier;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputOrder.js",["143"],"import React, {Fragment, useState} from \"react\";\n\nconst InputOrder = () => {\n    const [orderdate, setOrderdate] = useState(\"\");\n    const [totalamount, setTotalamount] = useState(\"\");\n    const [customerid, setCustomerid] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { orderdate, totalamount, customerid };\n          const response = await fetch(\"http://localhost:5000/Orders\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/order\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n       <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">Order</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={orderdate} onChange={e => setOrderdate(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={totalamount} onChange={e => setTotalamount(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={customerid} onChange={e => setCustomerid(e.target.value)}></input>\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputOrder;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListOrder.js",["144"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditOrder from './EditOrder';\nconst ListOrders = () => {\n    const [orders, setOrders] = useState([]);\n    //detele author function\n\n    const deleteOrder = async id => {\n        try {\n          const deleteOrder = await fetch(`http://localhost:5000/Orders/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setOrders(orders.filter(order => order.orderid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getOrder = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Orders\");\n          const jsonData = await response.json();\n    \n          setOrders(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getOrder();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>OrderId</th>\n        <th>OrderDate</th>\n        <th>TotalAmount</th>\n        <th>CustomerId</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {orders.map(order => (\n          <tr key={order.orderid}>\n              <td>{order.orderid}</td>\n              <td>{order.orderdate}</td>\n              <td>{order.totalamount}</td>\n              <td>{order.customerid}</td>\n\n              <td>\n                  <EditOrder order = {order}></EditOrder>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteOrder(order.orderid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListOrders;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditOrder.js",["145"],"import React, {Fragment, useState} from \"react\";\n\nconst EditOrder = ({order}) => {\n    const [orderdate, setOrderdate] = useState(order.orderdate);\n    const [totalamount, setTotalamount] = useState(order.totalamount);\n    const [customerid, setCustomerid] = useState(order.customerid);\n    //create order function to edit data in modal\n\n    const updateOrder = async e => {\n        e.preventDefault();\n        try {\n          const body = { orderdate, totalamount, customerid };\n          const response = await fetch(\n            `http://localhost:5000/Orders/${order.orderid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/order\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${order.orderid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${order.orderid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit Order</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setOrderdate(order.orderdate);\n                    setTotalamount(order.totalamount);\n                    setCustomerid(order.customerid);\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={orderdate} onChange={e => setOrderdate(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={totalamount} onChange={e => setTotalamount(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={customerid} onChange={e => setCustomerid(e.target.value)}></input>\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateOrder(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditOrder;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputBook.js",["146"],"import React, {Fragment, useState} from \"react\";\n\nconst InputBook = () => {\n    const [supplierid, setSupplierid] = useState(\"\");\n    const [authorid, setAuthorid] = useState(\"\");\n    const [unitprice, setUnitprice] = useState(\"\");\n    const [isbn, setIsbn] = useState(\"\");\n    const [circulation, setCirculation] = useState(\"\");\n    const [yearofpublication, setYearofpublication] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { supplierid, authorid, unitprice, isbn, circulation, yearofpublication };\n          const response = await fetch(\"http://localhost:5000/Books\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/books\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">Books</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={supplierid} onChange={e => setSupplierid(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={authorid} onChange={e => setAuthorid(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={unitprice} onChange={e => setUnitprice(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={isbn} onChange={e => setIsbn(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={circulation} onChange={e => setCirculation(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={yearofpublication} onChange={e => setYearofpublication(e.target.value)}></input>\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputBook;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListBook.js",["147"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditBook from './EditBook';\nconst ListBooks = () => {\n    const [books, setBooks] = useState([]);\n    //detele customer function\n\n    const deleteBooks = async id => {\n        try {\n          const deleteBooks = await fetch(`http://localhost:5000/Books/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setBooks(books.filter(book => book.bookid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getBooks = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Books\");\n          const jsonData = await response.json();\n    \n          setBooks(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getBooks();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>bookid</th>\n        <th>supplierid</th>\n        <th>authorid</th>\n        <th>unitprice</th>\n        <th>isbn</th>\n        <th>circulation</th>\n        <th>yearofpublication</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {books.map(book => (\n          <tr key={book.bookid}>\n              <td>{book.bookid}</td>\n              <td>{book.supplierid}</td>\n              <td>{book.authorid}</td>\n              <td>{book.unitprice}</td>\n              <td>{book.isbn}</td>\n              <td>{book.circulation}</td>\n              <td>{book.yearofpublication}</td>\n              <td>\n                  <EditBook book = {book}></EditBook>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteBooks(book.bookid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListBooks;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditBook.js",["148"],"import React, {Fragment, useState} from \"react\";\n\nconst EDditBook = ({book}) => {\n    const [supplierid, setSupplierid] = useState(book.supplierid);\n    const [authorid, setAuthorid] = useState(book.authorid);\n    const [unitprice, setUnitprice] = useState(book.unitprice);\n    const [isbn, setIsbn] = useState(book.isbn);\n    const [circulation, setCirculation] = useState(book.circulation);\n    const [yearofpublication, setYearofpublication] = useState(book.yearofpublication);\n    //create edit function to edit data in modal\n\n    const updateBook = async e => {\n        e.preventDefault();\n        try {\n          const body = { supplierid, authorid, unitprice, isbn, circulation, yearofpublication  };\n          const response = await fetch(\n            `http://localhost:5000/Books/${book.bookid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/books\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${book.bookid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${book.bookid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit Book</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setSupplierid(book.supplierid);\n                    setAuthorid(book.authorid);\n                    setUnitprice(book.unitprice);\n                    setIsbn(book.isbn);\n                    setCirculation(book.circulation);\n                    setYearofpublication(book.yearofpublication);\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={supplierid} onChange={e => setSupplierid(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={authorid} onChange={e => setAuthorid(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={unitprice} onChange={e => setUnitprice(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={isbn} onChange={e => setIsbn(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={circulation} onChange={e => setCirculation(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={yearofpublication} onChange={e => setYearofpublication(e.target.value)}></input>\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateBook(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EDditBook;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/ListOrderitem.js",["149"],"import React, {Fragment, useEffect, useState} from \"react\";\n\nimport EditOrderitem from './EditOrderitem';\nconst ListOrderItems = () => {\n    const [orderitems, setOrderitems] = useState([]);\n    //detele author function\n\n    const deleteOrderitem = async id => {\n        try {\n          const deleteOrderitem = await fetch(`http://localhost:5000/Orderitems/${id}`, {\n            method: \"DELETE\"\n          });\n    \n          setOrderitems(orderitems.filter(orderitem => orderitem.orderitemid !== id));\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    const getOrderitems = async () => {      \n        try {\n          const response = await fetch(\"http://localhost:5000/Orderitems\");\n          const jsonData = await response.json();\n    \n          setOrderitems(jsonData);\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n    useEffect(()=> {\n        getOrderitems();\n    }, []);\n    return (\n    <Fragment>\n        {\" \"}\n        <table class=\"table mt-5 text-center\">\n    <thead>\n      <tr>\n        <th>OrderItemId</th>\n        <th>OrderId</th>\n        <th>OrderDate</th>\n        <th>TotalAmount</th>\n        <th>CustomerId</th>\n        <th>Edit</th>\n        <th>Delete</th>\n      </tr>\n    </thead>\n    <tbody>\n      {/*<tr>\n        <td>John</td>\n        <td>Doe</td>\n        <td>john@example.com</td>\n      </tr> */}  \n      {orderitems.map(orderitem => (\n          <tr key={orderitem.orderitemid}>\n              <td>{orderitem.orderitemid}</td>\n              <td>{orderitem.orderid}</td>\n              <td>{orderitem.bookid}</td>\n              <td>{orderitem.unitprice}</td>\n              <td>{orderitem.quantity}</td>\n\n              <td>\n                  <EditOrderitem orderitem = {orderitem}></EditOrderitem>\n              </td>\n              <td><button class=\"btn btn-danger\" onClick={() => deleteOrderitem(orderitem.orderitemid)}>Delete</button></td>\n          </tr>\n      ))}\n      \n    </tbody>\n  </table>\n    </Fragment>)\n}\n\nexport default ListOrderItems;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/InputOrderitem.js",["150"],"import React, {Fragment, useState} from \"react\";\n\nconst InputOrderitem = () => {\n    const [orderid, setOrderid] = useState(\"\");\n    const [bookid, setBookid] = useState(\"\");\n    const [unitprice, setUnitprice] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n\n    const onSubmitForm = async e => {\n        e.preventDefault();\n        try {\n          const body = { orderid, bookid, unitprice, quantity };\n          const response = await fetch(\"http://localhost:5000/Orderitems\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(body)\n          });\n    \n          window.location = \"http://localhost:3000/orderitem\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n        \n    return (\n    <Fragment>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/author\")}>Author</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/customer\")}>Customer</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/order\")}>Order</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/supplier\")}>Supplier</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/books\")}>Books</button>\n         <button class=\"btn btn-primary\" onClick={() => (window.location = \"http://localhost:3000/orderitem\")}>OrderItem</button>\n        <h1 className=\"text-center mt-5\">OrderItem</h1>\n        <form className=\"d-flex\" onSubmit={onSubmitForm}>\n        <input type=\"text\" className=\"formControl\" value={orderid} onChange={e => setOrderid(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={bookid} onChange={e => setBookid(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={unitprice} onChange={e => setUnitprice(e.target.value)}></input>\n        <input type=\"text\" className=\"formControl\" value={quantity} onChange={e => setQuantity(e.target.value)}></input>\n\n        <button className=\"btn btn-success\">Add</button>\n        </form>\n    </Fragment>\n    )\n}\n\n\nexport default InputOrderitem;","/Users/oleksandrgribinuk/Desktop/testenviroment/client/server/client/src/Components/EditOrderitem.js",["151"],"import React, {Fragment, useState} from \"react\";\n\nconst EditOrderitem = ({orderitem}) => {\n    const [orderid, setOrderid] = useState(orderitem.orderid);\n    const [bookid, setBookid] = useState(orderitem.bookid);\n    const [unitprice, setUnitprice] = useState(orderitem.unitprice);\n    const [quantity, setQuantity] = useState(orderitem.quantity);\n\n    //create order function to edit data in modal\n\n    const updateOrderitem = async e => {\n        e.preventDefault();\n        try {\n          const body = { orderid, bookid, unitprice, quantity };\n          const response = await fetch(\n            `http://localhost:5000/Orderitems/${orderitem.orderitemid}`,\n            {\n              method: \"PUT\",\n              headers: { \"Content-Type\": \"application/json\" },\n              body: JSON.stringify(body)\n            }\n          );\n    \n          window.location = \"http://localhost:3000/orderitem\";\n        } catch (err) {\n          console.error(err.message);\n        }\n      };\n\n    return (\n        <Fragment>\n        <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target={`#id${orderitem.orderitemid}`}>\n          Edit\n        </button>\n        \n       \n        <div class=\"modal\" id={`id${orderitem.orderitemid}`} >\n          <div class=\"modal-dialog\">\n            <div class=\"modal-content\">\n        \n           \n              <div class=\"modal-header\">\n                <h4 class=\"modal-title\">Edit OrderItem</h4>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" onClick={()=> {\n                    setOrderid(orderitem.orderid);\n                    setBookid(orderitem.bookid);\n                    setUnitprice(orderitem.unitprice);\n                    setQuantity(orderitem.quantity)\n                }}>&times;</button>\n              </div>\n        \n  \n              <div class=\"modal-body\">\n                <input type=\"text\" className=\"formControl\" value={orderid} onChange={e => setOrderid(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={bookid} onChange={e => setBookid(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={unitprice} onChange={e => setUnitprice(e.target.value)}></input>\n                <input type=\"text\" className=\"formControl\" value={quantity} onChange={e => setQuantity(e.target.value)}></input>\n\n              </div>\n        \n              <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={e => updateOrderitem(e)}>Edit</button>\n                <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\n              </div>\n        \n            </div>\n          </div>\n        </div></Fragment>\n    )\n}\n\nexport default EditOrderitem;",{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"156","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":14,"column":17,"nodeType":"154","messageId":"155","endLine":14,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":13,"column":21,"nodeType":"159","messageId":"160","endLine":13,"endColumn":23},{"ruleId":"157","severity":1,"message":"158","line":22,"column":28,"nodeType":"159","messageId":"160","endLine":22,"endColumn":30},{"ruleId":"157","severity":1,"message":"158","line":31,"column":29,"nodeType":"159","messageId":"160","endLine":31,"endColumn":31},{"ruleId":"157","severity":1,"message":"158","line":39,"column":30,"nodeType":"159","messageId":"160","endLine":39,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":47,"column":30,"nodeType":"159","messageId":"160","endLine":47,"endColumn":32},{"ruleId":"157","severity":1,"message":"158","line":55,"column":30,"nodeType":"159","messageId":"160","endLine":55,"endColumn":32},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"152","severity":1,"message":"156","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":14,"column":17,"nodeType":"154","messageId":"155","endLine":14,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"165","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":29},{"ruleId":"152","severity":1,"message":"153","line":14,"column":17,"nodeType":"154","messageId":"155","endLine":14,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":12,"column":17,"nodeType":"154","messageId":"155","endLine":12,"endColumn":25},{"ruleId":"152","severity":1,"message":"166","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":31},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":12,"column":17,"nodeType":"154","messageId":"155","endLine":12,"endColumn":25},{"ruleId":"152","severity":1,"message":"167","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":15,"column":17,"nodeType":"154","messageId":"155","endLine":15,"endColumn":25},{"ruleId":"152","severity":1,"message":"168","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":28},{"ruleId":"152","severity":1,"message":"153","line":16,"column":17,"nodeType":"154","messageId":"155","endLine":16,"endColumn":25},{"ruleId":"152","severity":1,"message":"169","line":10,"column":17,"nodeType":"154","messageId":"155","endLine":10,"endColumn":32},{"ruleId":"152","severity":1,"message":"153","line":13,"column":17,"nodeType":"154","messageId":"155","endLine":13,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":15,"column":17,"nodeType":"154","messageId":"155","endLine":15,"endColumn":25},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","'deleteCustomer' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["170"],"no-negated-in-lhs",["171"],"'deleteAuthor' is assigned a value but never used.","'deleteSupplier' is assigned a value but never used.","'deleteOrder' is assigned a value but never used.","'deleteBooks' is assigned a value but never used.","'deleteOrderitem' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]